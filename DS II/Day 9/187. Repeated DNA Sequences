class Solution:
    def findRepeatedDnaSequences(self, s: str) -> List[str]:
        L, n = 10, len(s)
        if n <= L:
            return []
        a = 4
        MOD = 2 ** 63 - 1
        aL = pow(a, L, MOD)
        to_int = {'A': 0, 'C': 1, 'G': 2, 'T': 3}
        nums = [to_int[s[i]] for i in range(n)]
        h = 0
        for i in range(L):
            h = h * a + nums[i]
        seen, res = {h, }, set()
        for i in range(1, n - L + 1):
            h = (h * a - nums[i - 1] * aL + nums[i + L - 1]) % MOD
            if h in seen:
                res.add(s[i: i + L])
            else:
                seen.add(h)
        return res
